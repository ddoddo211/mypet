<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="petIns">

		<!-- 보험상품 -->
		<!-- 보험상품 리스트 목록가지고 오는 부분 -->
		<select id="prodPageList" parameterType="inspageVo" resultType="inspageVo">
			select * from
			(select ROWNUM rnum,
			A.*
			from (select * from insProd where insp_del = 'N' order by to_number(insp_id) asc) A)
			WHERE rnum between #{page}*#{pageSize}-(#{pageSize}-1) and #{page}*#{pageSize}
		</select>
		
		<!-- 보험상품 총갯수 -->
		<select id="getInsProductCnt" resultType="int">
			select count(*) from insprod
			where insp_del = 'N'
	  	</select>
	  	
	  	<!-- 보험상품 리스트 목록가지고 오는 부분(조회조건) -->
		<select id="prodKindPageList" parameterType="inspageVo" resultType="inspageVo">
			select * from
			(select ROWNUM rnum,
			A.*
			from (select * from insProd where INSP_JOIN = #{petKind} and insp_del = 'N' order by to_number(insp_id) asc) A)
			WHERE rnum between #{page}*#{pageSize}-(#{pageSize}-1) and #{page}*#{pageSize}
		</select>
		
		<!-- 보험상품 총갯수(조건) -->
		<select id="getInsProductKindCnt" parameterType="String" resultType="int" >
			select count(*) from insprod  where INSP_JOIN = #{petKind} and insp_del = 'N'
	  	</select>
	  	
	  	<!-- 우리아이 보험상품 추천 리스트 가지고 오는 부분 -->
	  	<select id="prodProductRecommendation" parameterType="inspageVo" resultType="insProdVo">
		      select * from
		              (select ROWNUM rnum,
		                      A.*
		               from  (select * from insProd where insp_del = 'N' order by to_number(insp_id) asc)A)
 				 WHERE  ROWNUM BETWEEN #{page}*#{pageSize}-(#{pageSize}-1) and #{page}*#{pageSize}
		         and INSP_JOIN = #{petKind}
		         and INSP_MINAGE <![CDATA[<=]]> ${petBirth}
		         and INSP_MAXAGE <![CDATA[>=]]> ${petBirth}
		         and INSP_SICK = #{petSick}
		</select>
		
		<!-- 게시글 총갯수(우리아이보험추천) -->
		<select id="getProductRecommendationCnt" parameterType="inspageVo" resultType="int" >
			select count(*) from insprod 
			 where INSP_JOIN = #{petKind}
		       and INSP_MINAGE <![CDATA[<=]]> to_number(#{petBirth})
		       and INSP_MAXAGE <![CDATA[>=]]> to_number(#{petBirth})
		       and INSP_SICK = #{petSick}
		       and insp_del = 'N'
	  	</select>
		
		<!-- 보험상품 아이디를 매개변수로 줘서 보험상품 정보 가지고 오는 방법 -->
		<select id="getProdInfo" parameterType="String" resultType="insProdVo">
			select * from insprod
			where insp_id = #{prodId}
		</select>
		
		
		<!-- 플랜정보에 보험상품 추가하기 -->
		<insert id="planInsert" parameterType="insShVo">
			insert into insshopping
			values(insShopping_num.nextval,#{inssp_mem},#{inssp_insp})
		</insert>
		
		<!-- 플랜정보에 회원의 플랜정보에 추가된 보험상품 조회 -->
		<select id="memPlan" parameterType="String" resultType="insShVo">
			select * from insshopping , insprod
			 where inssp_insp = insp_id 
               and inssp_mem = #{inssp_mem}
		</select>
		
		<!-- 회원의 펫이 있는지 확인하는 부분 -->
		<select id="petList" parameterType="String" resultType="mypetVo">
			select *
			from mypet , petkind 
			where myp_petk = petk_id
			and myp_del = 'N'
			and myp_mem = #{myp_mem}
			order by myp_id
		</select>
		
		<!-- 회원 정보를 가지고 오는 쿼리 -->
		<select id="memberInfo" parameterType="String" resultType="memVo">
			select *
			  from member
			where mem_id = #{mem_id}
		</select>
		
		<!-- 회원이 플랜정보 추가버튼을 클릭하였을때 이미 플랜정보에 추가되어진 상품인지 확인하는 부분 -->
		<select id="memShopping" parameterType="insShVo" resultType="insShVo">
			select * from insshopping
			where inssp_mem = #{inssp_mem}
			and inssp_insp= #{inssp_insp}
		</select>
		
		<!-- 플랜정보에서 보험상품삭제 버튼을 클릭하였을때 보험상품 아이디를 줘서 삭제하는 쿼리문 -->
		<delete id="insShProdDelete" parameterType="String">
			delete from insshopping 
			where inssp_id = #{inssp_id}
		</delete>
		
		<!-- 플랜정보에서 펫 삭제하기 버튼을 클릭하였을떄 펫의 아이디를 줘서 삭제하는 쿼리문  -->
		<update id="mypetDel" parameterType="String">
			update mypet set myp_del='Y' where myp_id=#{myp_id}
		</update>
		
		<!--반려동물 품종 가지고 오는 쿼리문-->
		<select id="petKindVo" parameterType="petkindVo" resultType="petkindVo">
			select * from petkind a, animal b , mypet c
			where c.myp_petk = a.petk_id
            and a.petk_am = b.am_id
            and c.myp_petk = #{myp_petk}
            and c.myp_name = #{myp_name}
            order by petk_id asc
		</select>
		
		<!--반려동물 품종 가지고 오는 쿼리문-->
		<select id="petKindList" parameterType="String" resultType="petkindVo">
            select * from petkind a, animal b
			where a.petk_am = b.am_id
            and b.am_name = #{am_name}
            order by petk_id asc
		</select>
		
		<!-- 플랜정보에서 나의 펫에 현재 보험가입이 되어 있는 상품 보여주기 -->
		<select id="petIsrAlready" parameterType="String" resultType="insVo">
			select * from insurance , insprod
			where  inssp_id = insp_id
			and ins_dis= 'N'
			and (ins_stat ='완료' or ins_stat ='신청' or  ins_stat ='결재완료')
			and mem_id = #{mem_id}
		</select>
		
		<!-- 보험가입을 위해서 진행 펫 id를 줘서 해당 펫 정보가지고 오기 -->
		<select id="mypetInfo" parameterType="String" resultType="mypetVo">
			select *
			from mypet , petkind
			where myp_petk = petk_id
			and MYP_ID = #{mem_id}
		</select>
		
		<!-- 펫 정보를 입력하여 추가하기 -->
		<insert id="mypetInsert" parameterType="mypetVo">
			insert into mypet 
			values(mypet_num.nextval, #{myp_mem}, #{myp_petk}, to_char(#{myp_birth},'yyyy-MM-dd')
			       ,#{myp_sick},#{myp_img},	#{myp_neu},#{myp_gender},#{myp_name},'N')
		</insert>
		
		<!-- 보험상품 가입되는 부분 -->
		<insert id="isrProdMypetJoin" parameterType="insVo">
			insert into insurance values (insurancejoin_num.nextval,'','','신청','N',0,#{myp_id},#{mem_id},#{inssp_id},'')
		</insert>
		
		<!-- 보험가입이 완료 된다면 해당 플랜정보(장바구니)화면에 해당 상품이 삭제 되도록 만들기 -->
		<delete id="shoppingJoinProd" parameterType="String">
			delete from insshopping where inssp_insp = #{inssp_insp}
		</delete>
		

		<!-- 보상안내 공지사항 나오게 설정 -->
		<select id="insNotice" resultType="insNoticeVo">
			select ROWNUM rnum , A.* from insnotice a 
            where rownum <![CDATA[<=]]> 5
			order by INOT_ID desc
		</select>
		
		<!-- 피보험자 선택하는 부분에 가입이 완료된 상품 나오게 설정 -->
		<select id="insuredPerson" parameterType="String" resultType="insVo">
			select * 
			  from (
			        select a.*
			             , b.*
			             , (
			                select listagg(knd, '<![CDATA[<br>]]>') within group (order by knd) insp_kind
			                  from (
			                        select d.insp_kind ||'('|| c.ins_stat ||')' AS knd
			                             , c.myp_id
			                          from insurance c
			                             , insprod d
			                         where c.INSSP_ID = d.INSP_ID
			                           and ins_dis= 'N'
			                           and c.MEM_ID =  #{mem_id}
			                           and c.ins_stat ='결재완료'
			                        )
			                 group by  myp_id 
			                 having myp_id = a.myp_id
			               ) AS insp_kind
			          from mypet a 
			             , petkind b 
			         where a.myp_petk = b.petk_id
			           and a.myp_mem = #{mem_id}
			         order by a.myp_id
			       )
			 where insp_kind is not null
		</select>
		
		<!-- 보상안내 - 보험가입할때 해당 펫의 가입되어 있는 보험상품 나오게 설정 -->
		<select id="claimPetJoinProd" parameterType="insVo" resultType="insVo">
			select * from insurance , insprod
			where inssp_id = insp_id
			and ins_stat = '결재완료'
			and ins_dis= 'N'
			and myp_id = #{myp_id}
			and mem_id = #{mem_id}
		</select>
		
		
		<!-- 보험청구 신청하는 부분 -->
		<insert id="accidentInsert" parameterType="accidentVo">
			insert into accident
			values(accident_num.nextval ,#{accd_date},#{accd_addr},#{accd_text},#{accd_img},#{accd_recp},'신청','','0',#{accd_mem},#{accd_myp},#{accd_ins},#{accd_act},'')
		</insert>
		
		
		<!-- 나의 펫 보험 - 회원이 현재까지 받은 보험금 현황 -->
		<select id="isuranceStatus" parameterType="String" resultType="int">
			select nvl(sum(accd_insp),0) as inspNum
			  from accident
			 where ACCD_MEM = #{mem_id}
			   and ACCD_STAT = '완료'
		</select>
		
		<!--나의펫 보험 - 월 전체 보험료 나오는 부분-->
		<select id="monthlyPremium" parameterType="String" resultType="int">
			select nvl(sum(b.insp_fees),0) 
              from insurance a , insprod b ,member c
		     where a.inssp_id = b.insp_id
			   and c.mem_id =  #{mem_id}
			   and a.INS_DIS = 'N'
			   and a.INS_STAT = '결재완료'
		</select>
		
		<!-- 나의 펫 보험 - 현재보험금 신청현황(신청) -->
		<select id="isrApply" parameterType="String" resultType="accidentVo">
				select * from accident a , mypet b , insurance c , insprod d 
				where a.accd_myp = b.myp_id
				and a.accd_ins = c.ins_id
				and c.inssp_id = d.insp_id
				and a.accd_mem = #{mem_id}
				and a.accd_stat = '신청'
		</select>
		
		<!-- 나의 펫 보험 - 현재보험금 신청현황(반려) -->
		<select id="underExamination" parameterType="String" resultType="accidentVo">
				select * from accident a , mypet b , insurance c , insprod d
				where a.accd_myp = b.myp_id
				and a.accd_ins = c.ins_id
				and c.inssp_id = d.insp_id
				and a.accd_mem = #{mem_id}
				and a.accd_stat = '반려'
		</select>
		
		<!-- 나의 펫 보험 - 현재보험금 신청현황(완료) -->
		<select id="isrComplete" parameterType="String" resultType="accidentVo">
				select * from accident a , mypet b , insurance c , insprod d 
				where a.accd_myp = b.myp_id
				and a.accd_ins = c.ins_id
				and c.inssp_id = d.insp_id
				and a.accd_mem = #{mem_id}
				and a.accd_stat = '완료'
		</select>
		
		<!--보험금 신청 현황 화면에서 보험금 신청 취소를 클릭하였을떄 적용되는 부분-->
		<delete id="goAccidentDel" parameterType="String">
			delete from accident 
			where accd_id = #{accd_id}
		</delete>
		
		<!-- 보험금 내역 확인 버튼을 클릭하였을때 나오는 부분 -->
		<select id="history" parameterType="String" resultType="accidentVo">
				select * from accident a , mypet b , insurance c ,insprod d 
			   	 where a.accd_myp = b.myp_id
                   and a.ACCD_INS = c.INS_ID
                   and c.inssp_id = d.INSP_ID
			       and a.accd_id = #{accd_id}
		</select>
		
		<!-- 보험금내역 부분에서 계좌번호를 변경하였을떄 실행  -->
		<update id="accountChange" parameterType="accidentVo">
			update accident set accd_act=#{accd_act} where accd_id=#{accd_id}
		</update>
		
		<!-- 나의 펫 보험 - 보험 신청/가입 되어 있는 가입내역이 나오는 부분 -->
		<select id="claimPetJoinProd1" parameterType="insVo" resultType="insVo">
			select * from insurance , insprod
			where inssp_id = insp_id
			and ins_dis= 'N'
			and (ins_stat ='완료' or ins_stat ='신청' or  ins_stat ='결재완료')
			and myp_id = #{myp_id}
			and mem_id = #{mem_id}
			order by ins_stat desc
		</select>
				
		<!-- 나의 펫 보험 화면에서 해당 펫의 가입되어 있는 보험상품 해지 하는 부분(실질적으로 삭제하는 부분이아닌 해지여부에 해지로 변경 -->
		<update id="mypetIsrDel" parameterType="String">
			update insurance 
			   set ins_dis = 'Y' 
			 where ins_id = #{ins_id}
		</update>
		
		<!-- 나의 펫 보험 화면에서 해당 펫의 가입되어 있는 보험상품 신청 취소 버튼을 클릭하였을 경우 -->
		<update id="insprodCancel" parameterType="String">
			update insurance 
			   set ins_stat = '신청취소' 
			 where ins_id = #{ins_id}
		</update>
		
		<!-- 나의 펫 보험 화면에서 해당 펫의 가입되어 있는 보험상품 결재하기 버튼을 클릭하였을 경우 보험가입상태를 결재완료로 변경 -->
		<update id="goPaymentSucces" parameterType="String">
			update insurance 
			   set ins_stat = '결재완료' 
			 where ins_id = #{ins_id}
		</update>
		
		<!-- 나의 펫 보험 - 보험 해지 되어 있는 가입내역이 나오는 부분 -->
		<select id="claimPetJoinProd2" parameterType="insVo" resultType="insVo">
			select * from insurance , insprod
			where inssp_id = insp_id
			and (ins_stat ='결재완료')
			and ins_dis= 'Y'
			and myp_id = #{myp_id}
			and mem_id = #{mem_id}
		</select>
		
		<!-- 나의 펫 보험 - 보험 신청 반려 되어 있는 가입내역이 나오는 부분 -->
		<select id="claimPetJoinHandling" parameterType="insVo" resultType="insVo">
			select * from insurance , insprod
			where inssp_id = insp_id
			and (ins_stat ='반려' or ins_stat ='신청취소')
			and myp_id = #{myp_id}
			and mem_id = #{mem_id}
		</select>
		
		
		<!-- 나의 펫 보험 화면에서 펫의 정보 수정하는 부분 -->
		<update id="mypetInfoUpdate" parameterType="mypetVo">
			update mypet set myp_img=#{myp_img}, myp_name=#{myp_name},myp_gender=#{myp_gender} ,myp_neu=#{myp_neu}
			 where myp_id=#{myp_id}
		</update>
		
		<!-- 나의 펫 보험 - 펫 삭제할떄 보험금 청구 신청을 하였을때 삭제 못하도록 하는것 -->
		<select id="petDelCondition" parameterType="String" resultType="accidentVo">
				select * from accident a , mypet b , insurance c , insprod d
				where a.accd_myp = b.myp_id
				and a.accd_ins = c.ins_id
				and c.inssp_id = d.insp_id
				and a.accd_myp = #{accd_myp}
				and a.accd_stat = '신청'
		</select>
		
		<!-- 관리자용 - 보험상품관리 : 전체 가입가능한 보험상품 수 -->
		<select id="caninsured" resultType="insProdVo">
			select *  from insprod where INSP_DEL= 'N'
		</select>
		
		<!-- 관리자용 - 보험상품관리 : 강아지 보험 상품 수가 나오는 부분 -->
		<select id="dogProd" resultType="insProdVo">
			select *  from insprod where INSP_DEL= 'N' and INSP_JOIN = '강아지'
		</select>
		
		<!-- 관리자용 - 보험상품관리 : 고양이 보험 상품 수가 나오는 부분 -->
		<select id="catProd" resultType="insProdVo">
			select *  from insprod where INSP_DEL= 'N' and INSP_JOIN = '고양이'
		</select>
		
		<!-- 관리자용 - 보험상품관리 : 가입만료된 보험상품 수가 나오는 부분 -->
		<select id="expiration" resultType="insProdVo">
			select *  from insprod where INSP_DEL= 'Y'
		</select>
		
		<!-- 관리자용 - 보험상품관리 : 신청/가입수 나오는 리스트목록 -->
		<select id="prodPageJoinList" parameterType="inspageVo" resultType="inspageVo">
            select A.* ,(select count(*) from insurance b , mypet c  where b.INSSP_ID = A.INSP_ID and b.MYP_ID = c.MYP_ID and c.MYP_DEL='N' and INS_STAT='완료' and  INS_DIS='N') as cnt 
            ,(select count(*) from insurance b , mypet c  where b.INSSP_ID = A.INSP_ID and b.MYP_ID = c.MYP_ID and c.MYP_DEL='N' and INS_STAT='신청' and  INS_DIS='N') as cnt2
            from
			(select ROWNUM rnum,
			A.*  
			from (select * from insProd  order by to_number(insp_id) asc) A) A
			WHERE rnum between #{page}*#{pageSize}-(#{pageSize}-1) and #{page}*#{pageSize}
		</select>
		
		<!-- 관리자용 - 보험상품관리 : 가입여부 상태 만료로 변경하는 부분 -->
		<update id="goInsProdDelUpdate" parameterType="String">
			update insprod
			   set insp_del = 'Y'
			 where insp_id = #{insp_id}
		</update>	
		
		<!-- 관리자용 - 보험상품관리 : 가입여부 상태 해제로 변경하는 부분 -->
		<update id="goInsProdDelRelease" parameterType="String">
			update insprod
			   set insp_del = 'N'
			 where insp_id = #{insp_id}
		</update>	
		
		<!-- 관리자용 - 보험상품관리 : 조회조건을 주었을때 조회되는 리스트 부분  -->
		<select id="prodKindPageListM" parameterType="inspageVo" resultType="inspageVo">
            select A.* ,(select count(*) from insurance b , mypet c  where b.INSSP_ID = A.INSP_ID and b.MYP_ID = c.MYP_ID and c.MYP_DEL='N' and INS_STAT='완료' and  INS_DIS='N') as cnt
            ,(select count(*) from insurance b , mypet c  where b.INSSP_ID = A.INSP_ID and b.MYP_ID = c.MYP_ID and c.MYP_DEL='N' and INS_STAT='신청' and  INS_DIS='N') as cnt2  from
			(select ROWNUM rnum,
			A.*  
			from (select * from insProd where  insp_join=#{petKind} order by to_number(insp_id) asc) A) A
			WHERE rnum between #{page}*#{pageSize}-(#{pageSize}-1) and #{page}*#{pageSize}
		</select>
		
		<!-- 관리자용 - 보험상품관리 : 보험상품 총갯수(조건) -->
		<select id="getInsProductKindCntM" parameterType="String" resultType="int" >
			select count(*) from insprod  where INSP_JOIN = #{petKind} 
	  	</select>	
	  	
	  	<!-- 관리자용 - 보험상품관리 : 보험상품을 등록할때 이름이 동일한건이 있는지 확인 -->
	  	<select id="prodNameSame" parameterType="insProdVo" resultType="insProdVo">
	  	<![CDATA[
	  		select insp_kind 
	  		  from insprod 
	  		 where trim(insp_kind) = trim(#{insp_kind})
	  		 and INSP_JOIN = #{insp_join}]]>
	  	</select>
	  	
	  	<!-- 관리자용 - 보험상품관리 : 보험상품 추가해주는 쿼리문 -->
	  	<insert id="prodInsert" parameterType="insProdVo">
	  		insert into insprod(insp_id,insp_name,insp_join,insp_kind,insp_fees,insp_maxins,insp_minage,insp_maxage
	  		,insp_period,insp_sick,insp_del) values(insprod_num.nextval,#{insp_name},#{insp_join},trim(#{insp_kind})
	  		,#{insp_fees},#{insp_maxins},#{insp_minage},#{insp_maxage},#{insp_period},#{insp_sick},'N')
	  	</insert>
	  	
	  	
	  	<!-- 관리자용 - 보험상품관리(보험상세화면) : 보험상품 가입완료자 수가 있는지 확인 -->
	  	<select id="completed" parameterType="String" resultType="insProdVo">
	  	select * from insprod a, insurance b , mypet c  
			where b.INSSP_ID = A.INSP_ID 
			and b.MYP_ID = c.MYP_ID 
			and c.MYP_DEL='N' 
			and INS_STAT='완료' 
			and INS_DIS='N'
			and INSSP_ID = #{inssp_id}
	  	</select>
	  	
	  	<!-- 관리자용 - 보험상품관리(보험상세화면) : 보험상품 가입신청자 수가 있는지 확인 -->
	  	<select id="applicant" parameterType="String" resultType="insProdVo">
	  	select * from insprod a, insurance b , mypet c  
			where b.INSSP_ID = A.INSP_ID 
			and b.MYP_ID = c.MYP_ID 
			and c.MYP_DEL='N' 
			and INS_STAT='신청' 
			and INS_DIS='N'
			and INSSP_ID = #{inssp_id}
	  	</select>
	  	
	  	<!-- 보험상품관리(보험내용수정) : 보험상품 내용수정하기 -->
		<update id="goInsProdUpdateS" parameterType="insProdVo">
			 update insProd 
				set insp_fees =#{insp_fees} 
				,	insp_maxins =#{insp_maxins} 
				,	insp_minage =#{insp_minage} 
				,	insp_maxage =#{insp_maxage} 
				,	insp_period =#{insp_period} 
				,	insp_sick =#{insp_sick}  
			  where insp_id=#{insp_id}
		</update>
		
		<!-- 보험신청/가입자관리 화면 : 보험신청자 나오는 부분 -->
		<select id="applyList" resultType="insVo">
			select * 
			  from insurance a , mypet b ,member c , insprod d
			 where a.MYP_ID = b.MYP_ID 
			   and a.MEM_ID = c.MEM_ID
			   and a.INSSP_ID = d.INSP_ID
			   and a.INS_STAT = '신청' 
			   and a.ins_dis='N'
			   order by ins_start desc
		</select>
		
		<!-- 보험신청/가입자관리 화면 : 보험가입자 나오는 부분 -->
		<select id="completeList" resultType="insVo">
			select * 
			  from insurance a , mypet b ,member c , insprod d
			 where a.MYP_ID = b.MYP_ID 
			   and a.MEM_ID = c.MEM_ID
			   and a.INSSP_ID = d.INSP_ID
			   and a.INS_STAT = '결재완료' 
			   and a.ins_dis='N'
			   order by ins_start desc
		</select>
		
		
		<!-- 보험신청/가입자관리 화면 : 신청승인 버튼을 클릭하였을때 가입여부를 완료로 변경해주는 부분 -->
		<update id="goApplyJoin" parameterType="insVo">
			 update insurance
				set ins_stat = '완료'  
				, ins_start = #{ins_start}
				, ins_end = #{ins_end}
			  where ins_id = #{ins_id}
		</update>
		
		<!-- 보험신청/가입자관리 화면 : 신청승인 버튼을 클릭하였을때 가입여부를 반려로 변경해주는 부분 -->
		<update id="goCompanionJoin" parameterType="insVo">
			 update insurance
				set ins_stat = '반려' 
				  , ins_start = #{ins_start} 
			  where ins_id = #{ins_id}
		</update>
		
		<!-- 보험신청/가입자관리 화면 : 보험반려내역 나오는 부분 -->
		<select id="terminationList" resultType="insVo">
				select * 
				  from insurance a , mypet b ,member c , insprod d
				 where a.MYP_ID = b.MYP_ID 
				   and a.MEM_ID = c.MEM_ID
				   and a.INSSP_ID = d.INSP_ID
				   and a.ins_stat ='반려'
				   order by ins_start desc
		</select>
		
		<!-- 관리자용 - 보험 상품 id를 줘서 해당 보험상품 정보가지고 오기 ( 보험상품 내용 & 가입자 정보 -->
		<select id="goJoinCheck" parameterType="insVo" resultType="insVo">
			select * from insurance a , member b 
			where a.mem_id = b.mem_id
			and a.mem_id =  #{mem_id}
			and a.ins_id = #{ins_id}
		</select>
		
		<!-- 보험가입자 관리 화면에서 보험해지하기 버튼을 클릭하였을 경우 해당 보험목록 해지로 변경하기 -->
		<update id="goJoinTermination" parameterType="String">
			 update insurance
				set ins_dis = 'Y' 
			  where ins_id = #{ins_id}
		</update>
		
		<!-- 보험가입자 관리 화면에서 보험해지하기 버튼을 클릭하였을 경우 사고 테이블에서 해당 보험가입상품 아이디로 줘서 반려처리하기  -->
		<update id="handling" parameterType="String">
			 update accident
				set accd_stat = '반려' 
				, accd_res = '관리자가 해당 회원의 보험 해지처리'
			  where accd_ins = #{ins_id}
		</update>
		
		<!-- 보험 공지사항 나오게 설정하기 -->
		<select id="noticList" resultType="insNoticeVo">
			select ROWNUM rnum , A.* from insnotice a 
			order by ROWNUM desc
		</select>	
		
		<!-- 공지사항에 글 추가하기 -->
		<insert id="goNoticeInsert" parameterType="insNoticeVo">
			insert into insnotice
			values(insnotice_num.nextval,#{inot_title},#{inot_text}, #{inot_date})
		</insert>	
		
		<!-- 게시글 확인하기 -->
		<select id="goNoticeCheck" parameterType="String" resultType="insNoticeVo">
			select * 
			  from insnotice
			where inot_id = #{inot_id}
		</select>
		
		<!-- 게시글 삭제하는 쿼리문 -->
		<delete id="goNoticeDel" parameterType="String">
			delete from insnotice 
			where inot_id = #{inot_id}
		</delete>
		
		<!-- 공지사항 글 수정한 내용 입력시키기  -->
		<update id="goNoticeUpdateInsert" parameterType="insNoticeVo">
			update insnotice 
			   set inot_title= #{inot_title}
			     , inot_text= #{inot_text}  
			 where inot_id = #{inot_id}
		</update>
		
		<!-- 보험금 청구 관리 : 보험금 청구 (신청)리스트 나오는 부분 -->
		<select id="goClaim" resultType="accidentVo">
			select a.ACCD_ID
                 , a.ACCD_MEM
                 , e.MEM_name ||'(' || ( select count(*) 
                                           from accident
                                          where accd_stat = '반려'
                                            and accd_mem = a.accd_mem) ||')' AS mem_name
                 , a.ACCD_INS
                 , b.INSP_NAME
                 , b.INSP_JOIN
                 , b.INSP_KIND
                 , d.MYP_name
                 , a.ACCD_DATE
                 , a.ACCD_STAT
			  from accident a 
                 , insprod b 
                 , insurance c 
                 , mypet d 
                 , member e
			 where a.ACCD_INS =  c.INS_ID
			   and c.INSSP_ID = b.INSP_ID
			   and a.ACCD_MYP = d.MYP_ID
			   and a.ACCD_MEM = e.MEM_ID
			   and a.ACCD_STAT = '신청'
             order by accd_id desc
		</select>
		
		<!-- 보험금 청구 관리 : 보험금 청구 (반려)리스트 나오는 부분 -->
		<select id="goCompanion" resultType="accidentVo">
			select * 
			  from accident a , insprod b , insurance c , mypet d , member e
			 where a.ACCD_INS =  c.INS_ID
			   and c.INSSP_ID = b.INSP_ID
			   and a.ACCD_MYP = d.MYP_ID
			   and a.ACCD_MEM = e.MEM_ID
			   and a.ACCD_STAT = '반려'
			   order by accd_id desc
		</select>
		
		<!-- 보험금 청구 관리 : 보험금 청구 (완료)리스트 나오는 부분 -->
		<select id="goCompleted" resultType="accidentVo">
			select * 
			  from accident a , insprod b , insurance c , mypet d , member e
			 where a.ACCD_INS =  c.INS_ID
			   and c.INSSP_ID = b.INSP_ID
			   and a.ACCD_MYP = d.MYP_ID
			   and a.ACCD_MEM = e.MEM_ID
			   and a.ACCD_STAT = '완료'
			   order by accd_id desc
		</select>
		
		<!-- 보험금 청구 관리 : 블랙 리스트인 회원 조회하는부분 -->
		<select id="memBlacklist" resultType="memVo">
				select a.mem_id
				     ,  a.mem_name
				     ,  ( select count(*) 
				           from accident
				          where accd_stat = '반려'
				            and ACCD_MEM = a.mem_id) AS cnt
				  from member a 
				 where  a.MEM_BLACK= '2' 
				 order by mem_id desc 
		</select>
		
		<!-- 관리자용 - 보험청구관리 :해당 회원을 블랙리스트에 추가하는 부분  -->
		<update id="goBlackAdd" parameterType="String">
			update member set mem_black='2' where mem_id=#{mem_id}
		</update>
		
		<!-- 관리자용 - 보험청구관리 :해당 회원을 블랙리스트 하였을떄 회원이 신청한 보험건이 신청에서 반려로 변경되는 부분 -->
		<update id="handlingMemAll" parameterType="String">
			 update accident
				set accd_stat = '반려' 
				, accd_res = '관리자가 해당 회원의 보험 해지처리'
			  where ACCD_MEM = #{accd_mem}
			  and accd_stat = '신청'
		</update>
		
		<!-- 관리자용 - 보험청구관리 :해당 회원을 블랙리스트에 해제하는 부분  -->
		<update id="goBlackRelease" parameterType="String">
			update member set mem_black='1' where mem_id=#{mem_id}
		</update>
		
		<!-- 보험금 청구 관리 : 보험금청구 신청내역확인(매개변수로 해당 사고 테이블의 pk)주기 -->
		<select id="accidentApply" parameterType="String" resultType="accidentVo">
			select * 
			  from accident a , mypet b , insurance c , insprod d , member e 
			 where a.accd_myp = b.myp_id 
			   and a.accd_ins = c.ins_id
			   and c.inssp_id = d.insp_id
			   and a.accd_mem = e.mem_id
			   and a.accd_id = #{accd_id}
		</select>
		
		<!-- 관리자용 - 보험청구관리(신청) : 결과를 완료로 입력하는 부분 -->
		<update id="insPayment" parameterType="accidentVo">
			 update accident
				set accd_stat = '완료' 
				 , accd_pay = #{accd_pay}
				 , accd_insp = #{accd_insp}
			  where accd_id = #{accd_id}
		</update>
		
		<!-- 관리자용 - 보험청구관리(신청) : 결과를 반려로 입력하는 부분 -->
		<update id="unpaid" parameterType="accidentVo">
			 update accident
				set accd_stat = '반려' 
				 , accd_res = #{accd_res}
			  where accd_id = #{accd_id}
		</update>

		<!-- 플랜정보 이미 등록된 가입 상품일 경우  -->
		<select id="insCnt" parameterType="mypetVo" resultType="mypetVo">
	  	 select count(*) rnum 
              from insurance
             where 1=1
               and myp_id = #{myp_id}
               and inssp_id =#{inssp_id}
               and ins_stat in ('결재완료', '완료', '신청')
               and ins_dis = 'N'
		</select>		

</mapper>