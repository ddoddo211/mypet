<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="shop">
	
	<!-- 펫쇼핑몰 이벤트List 조회 -->
	<select id="shopNoticeList" resultType="snotVo">
		select * from shopnotice
	</select>
	
	<!-- 펫쇼핑몰 이벤트글 조회 -->
	<select id="shopNoticeDetail" parameterType="String" resultType="snotVo">
		select * from shopnotice
		where snot_id = #{snot_id}
	</select>
	
	<!-- 펫쇼핑몰 강아지/고양이 상품분류(사료,장난감등) -->
	<select id="prodMenu" parameterType="String" resultType="dvsVo">
		SELECT dvs_id,dvs_name, LEVEL
		FROM division
		START WITH dvs_parent = #{dvs_id}
		CONNECT BY PRIOR dvs_id  = dvs_parent
		and level = 1
		ORDER BY to_number(SUBSTR(DVS_ID,4,2))
	</select>
	
	<!-- 펫쇼핑 상품분류에 대한 옵션(연령,브랜드등)List -->
	<select id="prodMenuOption" parameterType="String" resultType="dvsVo">
		SELECT dvs_id,dvs_name, LEVEL
		FROM division
		START WITH dvs_parent = #{dvs_parent}
		CONNECT BY PRIOR dvs_id  = dvs_parent
		and level = 1
	</select>
	
	<!-- 펫쇼핑몰 옵션(연령,브랜드등)에 대한 분류(브랜드명,펫나이등)List -->
	<select id="opMenuList" parameterType="String" resultType="dvsVo">
		SELECT dvs_id,dvs_name,dvs_parent, LEVEL
		FROM division
		where level = 2
		START WITH dvs_parent = #{dvs_parent}
		CONNECT BY PRIOR dvs_id  = dvs_parent
	</select>
	
	<!-- 펫쇼핑몰 체크박스 조건이 없을 경우 상품List -->
	<select id="prodList" parameterType="Map" resultType="prodVo">
		select * from (
			select rownum as rnum,a.* from
    			(SELECT * FROM PROD 
     			WHERE PROD_ID in (SELECT PDD_PROD FROM PRODDV WHERE PDD_DVS = #{dvsVo.dvs_parent})
     			and prod_chk = 1
		     	order by prod_date desc)a
		     )
		where rnum between #{pageVo.page} *#{pageVo.pageSize}-(#{pageVo.pageSize}-1) and #{pageVo.page}*#{pageVo.pageSize}
	</select>
	
	<!-- 펫쇼핑몰 체크박스 조건이 없을 경우 상품리스트 Size -->
	<select id="prodSize" parameterType="String" resultType="int">
		select count(*) 
		from (select * from prod where prod_id in (select pdd_prod from proddv where pdd_dvs = #{dvs_parent})and prod_chk = 1)
	</select>
	
	<!-- 펫쇼핑몰 체크박스 조건이 있을 경우 상품List -->
	<select id="chkList" parameterType="Map" resultType="prodVo">
		select * from (
		select  rownum as rnum,a.* from prod a
		where prod_id in (select pdd_prod from proddv where pdd_dvs in (${op0})
		<foreach collection="opChkList" item="item" index="index">
			and prod_id in (select pdd_prod from proddv where pdd_dvs in (${item}))
		</foreach>
		 )
		)
		where rnum between #{pageVo.page} *#{pageVo.pageSize}-(#{pageVo.pageSize}-1) and #{pageVo.page}*#{pageVo.pageSize}
	</select>
	
	<!-- 펫쇼핑몰 체크박스 조건이 있을 경우 상품리스트 Size -->
	<select id="chkSize" parameterType="Map" resultType="int">
		select count(*) from (
		select  rownum as rnum,a.* from prod a
		where prod_id in (select pdd_prod from proddv where pdd_dvs in (${op0})
		<foreach collection="opChkList" item="item" index="index">
			and prod_id in (select pdd_prod from proddv where pdd_dvs in (${item}))
		</foreach>
		 )
		 and prod_chk = 1
		)
	</select>
	
	<!-- 상품에 옵션List -->
	<select id="prodOpList" parameterType="String" resultType="prodoVo">
		select * from prodoption
		where prodo_prod = #{prod_id}
		order by substr(prodo_id,7)
	</select>
	
	<select resultType="String" id="opChk" parameterType="Map">
		select DVS_ID from division WHERE DVS_PARENT = #{opid} AND dvs_id in 
		<foreach index="index" item="item" collection="valueGo" close=")" open="(" separator=","> 
			#{item} 
		</foreach>
	</select>
	
	<!-- 상품의 대한 상세정보 -->
	<select id="prodDetail" parameterType="String" resultType="prodVo">
		select * from prod
		where prod_id = #{prod_id}
	</select>
	
	
	<!--펫쇼핑몬 메인 사료검색 필요 XML  -->
	
	<!-- 동물 구분 -->
	<select id="animalList" resultType="dvsVo">
		select * from division
		where dvs_parent is null
	</select>
	
	<!-- 동물의 아이디를 받아 해당 동물의 사료id찾기 -->
	<select id="animalSaryo" resultType="String" parameterType="String">
		select * from division
		where dvs_name = '사료'
		start with dvs_parent = #{dvs_id}
		connect by prior dvs_id = dvs_parent
	</select>
	
	<!-- 해당 동물의 브랜드 종류List -->
	<select id="brandSearch" resultType="dvsVo" parameterType="String">
		select * from division
		where dvs_parent = (select dvs_id from division where dvs_name = '브랜드' start with dvs_parent = #{dvs_parent} connect by dvs_id = dvs_parent)
	</select>
	
	
	<!-- 상품 등록  -->
	<insert id="prodCre" parameterType="prodVo">
		insert into prod
		values ('PROD'||PROD_ID.NEXTVAL,#{prod_name},#{prod_price},#{prod_sprice},#{prod_qty},#{prod_pimg},#{prod_img},sysdate,#{prod_mem},1)
	</insert>
	
	<!-- 상품분류 등록 -->
	<insert id="pddCre" parameterType="pddVo">
		<selectKey resultType="string" keyProperty="pdd_prod" order="BEFORE">
			select max(substr(prod_id,5,4)) from prod
		</selectKey>
		insert into proddv
		values('PDD'||PDD_ID.NEXTVAL,#{pdd_dvs},'PROD'||#{pdd_prod})
	</insert>
	
	<!-- 상품 옵션 등록 -->
	<insert id="prodoCre" parameterType="prodoVo">
		<selectKey resultType="string" keyProperty="prodo_prod" order="BEFORE">
			select max(substr(prod_id,5,4)) from prod
		</selectKey>
		insert into prodoption
		values ('OPTION'||PRODOP_ID.NEXTVAL,#{prodo_name},#{prodo_price},#{prodo_qty},'PROD'||#{prodo_prod})
	</insert>
	
 	<!-- 상품검색 후 상품List --> 
	<select id="prodSearch" resultType="prodVo" parameterType="Map">
		select * from (
			select rownum as rnum,a.* from
			(select * from prod
			where prod_id in (select pdd_prod from proddv where pdd_dvs = #{dvsVo.dvs_parent})
			and prod_chk = 1
			and prod_name like '%'||#{prod_name}||'%'
			order by prod_date desc)a
		)
		where rnum between #{pageVo.page} *#{pageVo.pageSize}-(#{pageVo.pageSize}-1) and #{pageVo.page}*#{pageVo.pageSize}
	</select>
	
	<!-- 상품검색 후 체크박스 조건 있는 상품List -->
	<select id="prodSearchChk" resultType="prodVo" parameterType="Map">
		select * from (
		    select rownum as rnum,a.* from prod a
		    where prod_id in (select pdd_prod from proddv where pdd_dvs= #{dvsVo.dvs_parent})
		    and prod_chk = 1
		    and prod_name like '%'||#{prod_name}||'%'
		    <foreach collection="opChkList" item="item" index="index">
		    	and prod_id in (select pdd_prod from proddv where pdd_dvs in (${item}))
		    </foreach>
		    )
		where rnum between ${pageVo.page} *${pageVo.pageSize}-(${pageVo.pageSize}-1) and ${pageVo.page}*${pageVo.pageSize}
	</select>
	
	<!-- 상품 삭제  -->
	<update id="deleteProd" parameterType="String">
		update prod
		set prod_chk = 2
		where prod_id = #{prod_id}
	</update>
	
	<!-- 상품 삭제할 때 fk로 등록된 상품도 삭제  -->
	<delete id="deletePdd" parameterType="String">
		delete from proddv
		where pdd_prod = #{prod_id}
	</delete>
	
	<!-- 상품 수정 -->
	<update id="prodUpdate" parameterType="prodVo">
		update prod
		set prod_name = #{prod_name},
		   	prod_price  = #{prod_price},
		    prod_sprice = #{prod_sprice},
		    prod_qty = #{prod_qty},
		    prod_pimg = #{prod_pimg},
		    prod_img = #{prod_img}
		where prod_id = #{prod_id}
	</update>
	
	<!-- 상품 수정 시 기존에 있던 옵션 삭제하기 위해서 사용 -->
	<delete id="deleteOption" parameterType="String">
		delete from prodoption
		where prodo_prod = #{prod_id}
	</delete>
	
	<!-- 상품후기 List -->
	<select id="revList" parameterType="String" resultType="prevVo">
		select*from prodrev
		where prev_prod = #{prod_id}
	</select>
	
	<!-- 상품후기 수정 -->
	<update id="revUpdate" parameterType="prevVo">
		update prodrev
		set prev_title = #{prev_title},
		    prev_text = #{prev_text}
		where prev_id = #{prev_id}
	</update>
	
	<!-- 상품후기 삭제 -->
	<delete id="revDelete" parameterType="String">
		delete from prodrev
		where prev_id = #{prev_id}
	</delete>
	
	<!-- 상품후기 등록 -->
	<insert id="revInsert" parameterType="prevVo">
		INSERT INTO PRODREV
		VALUES ('REV'||REV_ID.NEXTVAL,#{prev_title},#{prev_text},#{prev_prod},#{prev_mem},sysdate,#{prev_num})
	</insert>
	
	<!-- 상품옵션 조회 -->
	<select id="prodoVo" parameterType="String" resultType="prodoVo">
		SELECT * FROM PRODoption
		where prodo_id = #{prodo_id}
	</select>
	
	<!-- 장바구니 조회 -->
	<select id="cartList" parameterType="String" resultType="cartVo">
		select a.prod_pimg,a.prod_name,a.prod_price,a.prod_sprice,b.* 
		from prod a,cart b
		where prod_id = cart_prod
		and cart_mem = #{cart_mem}
	</select>
	
	<!-- 장바구니 등록 -->
	<insert id="cartAdd" parameterType="cartVo">
		INSERT INTO CART
		VALUES ('CART'||CART_ID.NEXTVAL,#{cart_qty},#{cart_price},#{cart_prod},#{cart_mem})
	</insert>
	
	<!-- 장바구니 삭제 -->
	<delete id="cartDel" parameterType="String">
		delete from cart
		where cart_id = #{cart_id}
	</delete>
	
	<!-- 장바구니 주문하기 List -->
	<select id="cartBuyList" parameterType="String" resultType="cartVo">
		select a.prod_pimg,a.prod_name,a.prod_price,a.prod_sprice,b.* 
		from prod a,cart b
		where prod_id = cart_prod
		and cart_id in (${value})
	</select>
	
	<!-- 배송지 등록 -->
	<insert id="daddrCre" parameterType="daddrVo">
		insert into deliveryaddr
		values ('DADDR'||DADDR_ID.NEXTVAL,#{daddr_name},#{daddr_addr},#{daddr_addr2},#{daddr_tel},#{daddr_mem},#{daddr_chk},#{daddr_title})
	</insert>
	
	<!-- 기존배송지 조회 -->
	<select id="basicAddress" parameterType="String" resultType="daddrVo">
		select * from deliveryaddr
		where daddr_mem = #{daddr_mem}
		and daddr_chk = 1
	</select>
	
	<!-- 저장된 배송지 리스트 -->
	<select id="otherAddress" parameterType="String" resultType="daddrVo">
		select * from deliveryaddr
		where daddr_mem = #{daddr_mem}
		and daddr_chk = 3
	</select>
	
	<!-- 상품 판매시 수량 변경 -->
	<update id="qtyUpdate" parameterType="prodVo">
		update prod
		set prod_qty = #{prod_qty}
		where prod_id = #{prod_id}
	</update>
	
	<!-- 배송지 확인 -->
	<select id="saveAddr" parameterType="String" resultType="daddrVo">
		select * from deliveryaddr
		where daddr_id = #{daddr_id}
	</select>
	
	<!-- 배송지가 새로운 경우 -->
	<insert id="orderInsert" parameterType="ordsVo">
		<selectKey resultType="string" keyProperty="ords_daddr" order="BEFORE">
			select max(substr(daddr_id,6,4)) from deliveryaddr
		</selectKey>
		insert into ordersheet
		values ('ORDS'||SHOPORDS_ID.NEXTVAL,#{ords_qty},'상품준비중',#{ords_mem},#{ords_prod},'DADDR'||#{ords_daddr},#{ords_price},sysdate)
	</insert>
	
	<!-- 기존에 배송지가 있을 경우 -->
	<insert id="orderInsert2" parameterType="ordsVo">
		insert into ordersheet
		values ('ORDS'||SHOPORDS_ID.NEXTVAL,#{ords_qty},'상품준비중',#{ords_mem},#{ords_prod},#{ords_daddr},#{ords_price},sysdate)
	</insert>
		
	<!-- 업데이트  배송지-->
	<update id="updateDaddr" parameterType="String">
		update deliveryaddr
		set daddr_chk = 2
		where daddr_id = #{daddr_id}
	</update>
</mapper>
 