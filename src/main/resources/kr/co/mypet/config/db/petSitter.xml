<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="petSitter">
	<select id="petSitterToHomeList" resultType="pstVo">
		select m.mem_addr, p.* 
		from petsitter p, member m
		where p.pst_mem = m.mem_id	
		and p.pst_chk = 'N'	
	</select>
	
	<select id="petSitterZip" resultType="zipVo">
		select * from zip
	</select>
	
	<select id="petToHomeDetail" parameterType="String" resultType="pstVo">
		select p.*, mem_name, mem_id, mem_img, mem_hp 
		from petsitter p, member m
		where p.pst_id = #{pst_id}
		and p.pst_mem = m.mem_id
	</select>
	
	<select id="getFaqList" resultType="fVo">
		select rownum rnum, p.*
		from petsitFaq p
	</select>
	
	<select id="getFaqOne" parameterType="String" resultType="fVo">
		select *
		from petsitFaq
		where psf_id = #{psf_id}
	</select>
	
	<update id="memAddrUpdate" parameterType="map">
		update member
		set mem_addr = #{mem_addr}, mem_addr2 = #{mem_addr2}
		where mem_id = #{mem_id}
	</update>
	
	<select id="getMypetList" parameterType="String" resultType="mypetVo">
		select * from mypet, petkind, animal
		where myp_petk = petk_id
		and am_id = petk_am
		and myp_mem = #{myp_mem}
	</select>
	
	<select id="getPetKindList" parameterType="String" resultType="petkindVo">
		select * 
		from petkind, animal
		where petk_am = am_id
		and am_name = #{am_name}
	</select>
	
	<insert id="insertMypet" parameterType="map">
		insert into mypet
		values('MP' || lpad(mypet_no.nextVal, 3, '0'), #{myp_mem}, #{myp_petk}, #{myp_birth}, #{myp_sick}, #{myp_img}, #{myp_neu}, #{myp_gender}, #{myp_name}, 'N')	
	</insert>
	
	<update id="deleteMypet" parameterType="String">
		update mypet set
		myp_del = 'Y'
		where myp_id = #{myp_id}
	</update>
	
	<update id="updateMypetInfo" parameterType="mypetVo">
		update mypet set
		myp_name = #{myp_name},
		myp_gender = #{myp_gender},
		myp_neu = #{myp_neu},
		myp_birth = #{myp_birth},
		myp_sick = #{myp_sick},
		myp_img = #{myp_img}
		where myp_id = #{myp_id}
	</update>
	
	<select id="getPetInfo" parameterType="String" resultType="mypetVo">
		select *
		from mypet, animal, petkind
		where myp_id = #{myp_id}
		and myp_petk = petk_id
		and am_id = petk_am
	</select>
	
	<insert id="insertReservation" parameterType="map">
		insert into sitterres
		values('STR' || lpad(res_no.nextVal,3,'0'), #{str_date}, #{str_spec}, #{str_price}, #{str_time}, #{str_atime}, #{str_arr}, #{str_pst}, #{str_mem}, #{str_myp}, 'N', #{str_start}, #{str_stop})
	</insert>
	
	<select id="getReviewList" parameterType="map" resultType="revVo">
		select * 
		from
		(
		    select rownum as rnum, a.* 
		    from 
		    (   
		        select m.mem_name, m.mem_img, s.*  
		        from member m, sitterrev s
		        where mem_id = stv_mem
		        and stv_pst = #{stv_pst}
		        order by s.stv_date desc
		    ) a
		)
		where rnum between (${page}*${pageSize})-(${pageSize}-1) and (${page}*${pageSize})	
	</select>
	
	<select id="getReviewCnt" parameterType="String" resultType="int">
		select count(*)
		from sitterrev
		where stv_pst = #{stv_pst}
	</select>
	
	<insert id="insertReview" parameterType="Map">
		insert into sitterrev
		values('RE' || lpad(rev_no.nextVal, 3, '0'), #{stv_text}, sysdate, #{stv_pst}, #{stv_mem}, #{stv_score})
	</insert>
	
	<update id="updateReview" parameterType="map">
		update sitterrev set
		stv_text = #{stv_text},
		stv_score = #{stv_score}
		where stv_id = #{stv_id}
	</update>
	
	<delete id="deleteReview" parameterType="String">
		delete from sitterrev
		where stv_id = #{stv_id}
	</delete>
	
	<insert id="insertSitterTo" parameterType="pstVo">
		insert into petsitter
		values('PST' || lpad(pst_no.nextVal, 3, '0'), #{pst_mem}, #{pst_img}, #{pst_text}, sysdate, 0, 0, #{pst_title}, #{pst_price2}, 'N', #{pst_price1}, #{pst_cidate}, #{pst_codate})
	</insert>
	
	<update id="updateFaq" parameterType="map">
		update petsitfaq set
		psf_text = #{psf_text}, psf_name = #{psf_name}, psf_date = sysdate, psf_mem = 'admin'
		where psf_id = #{psf_id}
	</update>
	
	<delete id="deleteFaq" parameterType="String">
		delete from petsitfaq
		where psf_id = #{psf_id}
	</delete>
	
	<insert id="insertFaq" parameterType="map">
		insert into petsitfaq
		values('F' || lpad(faq_no.nextval,3,'0'), #{psf_text}, #{psf_name}, sysdate, 'admin')
	</insert>
	
	<select id="petNoticeListDate" resultType="pstVo">
		select m.mem_addr, p.* 
		from petsitter p, member m
		where p.pst_mem = m.mem_id	
		and p.pst_chk = 'N'	
		order by p.pst_date desc
	</select>
	
	<select id="petNoticeListCount" resultType="pstVo">
		select m.mem_addr, p.* 
		from petsitter p, member m
		where p.pst_mem = m.mem_id	
		and p.pst_chk = 'N'	
		order by p.pst_view desc
	</select>
	
	<select id="petNoticeListSearch" parameterType="map" resultType="pstVo">
		select m.mem_addr, p.*
		from petsitter p, member m
		where p.pst_mem = m.mem_id
		and p.pst_chk = 'N'	
		and m.mem_addr like '%' || #{zip_high} || '%' || #{zip_low} || '%'
	</select>
	
	<select id="petNoticeListSearchDate" parameterType="map" resultType="pstVo">
		select m.mem_addr, p.*
		from petsitter p, member m
		where p.pst_mem = m.mem_id
		and p.pst_chk = 'N'	
		and m.mem_addr like '%' || #{zip_high} || '%' || #{zip_low} || '%'
		order by p.pst_date desc
	</select>
	
	<select id="petNoticeListSearchCount" parameterType="map" resultType="pstVo">
		select m.mem_addr, p.*
		from petsitter p, member m
		where p.pst_mem = m.mem_id
		and p.pst_chk = 'N'	
		and m.mem_addr like '%' || #{zip_high} || '%' || #{zip_low} || '%'
		order by p.pst_view desc
	</select>
	
	<update id="petNoticeCountUpdate" parameterType="map">
		update petsitter set
		pst_view = ${pst_view}
		where pst_id = #{pst_id}
	</update>
	
	<select id="getReservationList" parameterType="String" resultType="resVo">
		select (select myp_name from mypet where myp_id = s.str_myp) myp_name, (select mem_name from member where mem_id = #{mem_id}) mem_name, s.*
		from sitterres s
		where str_mem = #{mem_id}
		and str_date <![CDATA[>]]> sysdate
		order by str_date
	</select>
	
	<delete id="deleteReservation" parameterType="String">
		delete from sitterres
		where str_id = #{str_id}
	</delete>
	
	<select id="getMyReviewList" parameterType="String" resultType="revVo">
		select rownum rnum, p.pst_id, s.*
		from sitterrev s, petsitter p
		where stv_mem = #{stv_mem}
		and stv_pst = pst_id
	</select>
	
	<select id="getMaxFaq" resultType="String">
		select Max(psf_id) from petsitfaq
	</select>
	
	<insert id="insertSupport" parameterType="map">
		insert into sitterApp
		values ('STA' || lpad(sta_no.nextVal, 3, '0'), #{sta_mem}, #{sta_text}, 'N', sysdate, '', '', '', 1, 'N', 550, '')
	</insert>
	
	<select id="getMySupport" parameterType="String" resultType="staVo">
		select * 
		from sitterApp
		where sta_mem = #{sta_mem}
		and sta_chk = 1
	</select>
	
	<delete id="deleteSupport" parameterType="String">
		delete from sitterapp
		where sta_id = #{sta_id}
	</delete>
	
	<select id="getReservationListAll" parameterType="pageVo" resultType="resVo">
		select *
		from
		(
		    select rownum rnum, a.*
		    from
		    (
		        select (select myp_name from mypet where myp_id = s.str_myp) myp_name
		             , (select mem_name from member where mem_id = s.str_mem) mem_name
		             , s.* 
		        from sitterres s
		        order by s.str_pay, s.str_date
		    ) a
		)
		where rnum between (${page}*${pageSize})-(${pageSize}-1) and (${page}*${pageSize})	
	</select>
	
	<select id="getReservationListCount" resultType="Integer">
		select count(*)
		from sitterres
	</select>
	
	<select id="getSupportListAll" parameterType="pageVo" resultType="staVo">
		select *
		from
		(
			select rownum rnum, a.*
			from
			(
				select (select mem_name from member where mem_id = s.sta_mem) mem_name, s.*
				from sitterapp s
				where s.sta_chk = 1
				order by s.sta_suc
			) a
		)
		where rnum between (${page}*${pageSize})-(${pageSize}-1) and (${page}*${pageSize})	
	</select>
	
	<select id="getSupportListCount" resultType="Integer">
		select count(*)
		from sitterapp
	</select>
	
	<update id="updateSupportSuc" parameterType="String">
		update sitterapp set
		sta_suc = 'Y'
		where sta_id = #{sta_id}
	</update>
	
	<update id="updateMemeberSit" parameterType="String">
		update member set
		mem_sit = 2
		where mem_id = #{mem_id}
	</update>
	
	<update id="updateSupportFile" parameterType="map">
		update sitterapp set
		sta_file = #{sta_file}
		where sta_id = #{sta_id}
	</update>
	
	<select id="getMySitterToCount" parameterType="String" resultType="Integer">
		select count(*)
		from petsitter
		where pst_mem = #{pst_mem}
		and pst_chk = 'N'
	</select>
	
	<update id="deleteMySitterTo" parameterType="String">
		update petsitter set
		pst_chk = 'Y'
		where pst_id = (select pst_id from petsitter where pst_mem = #{mem_id} and pst_chk = 'N')
	</update>
	
	<select id="getPetSitterChk" parameterType="map" resultType="Integer">
		select count(*)
		from petsitterchk
		where pc_pst = #{pc_pst}
		and pc_mem = #{pc_mem}
	</select> 
	
	<insert id="insertPetsitterChk" parameterType="map">
		insert into petsitterchk
		values('PSC' || lpad(pc_no.nextVal,3,'0'), #{pc_pst}, #{pc_mem})
	</insert>
	
	<delete id="deleteADReservation" parameterType="String">
		delete from sitterres
		where str_pay = 'N' 
		and str_date <![CDATA[<]]> #{str_date}
	</delete>
	
	<select id="getReViewAllCnt" resultType="Integer">
		select count(*)
		from sitterrev
	</select>
	
	<select id="getReViewListAll" parameterType="pageVo" resultType="revVo">
		select * 
		from
		(
		    select rownum as rnum, a.* 
		    from 
		    (   
		        select m.mem_name, m.mem_img, s.*  
		        from member m, sitterrev s
		        where m.mem_id = s.stv_mem
		        order by s.stv_pst
		    ) a
		)
		where rnum between (${page}*${pageSize})-(${pageSize}-1) and (${page}*${pageSize})		 
	</select>
	
	<select id="getPetSitterToListAll" parameterType="pageVo" resultType="pstVo">
		select *
		from
		(
		    select rownum as rnum, a.*
		    from
		    (
		        select mem_name, p.*
		        from petsitter p, member
		        where mem_id = pst_mem
		        order by pst_id
		    ) a
		)
		where rnum between (${page}*${pageSize})-(${pageSize}-1) and (${page}*${pageSize})		
	</select>
	
	<select id="getPetSitterToAllCnt" resultType="Integer">
		select count(*)
		from petSitter
		where pst_chk = 'N'
	</select>
	
	<update id="deleteSitterTo" parameterType="String">
		update petsitter set
		pst_chk = 'Y'
		where pst_id = #{pst_id}
	</update>
	
	<select id="getPetListAll" parameterType="pageVo" resultType="mypetVo">
		select *
		from
		(
		    select rownum as rnum, a.*
		    from
		    (
		        select petk_name, am_name, mem_name, p.*
		        from mypet p, member, animal, petkind
		        where mem_id = myp_mem
		        and myp_petk = petk_id
		        and petk_am = am_id
		        and myp_del = 'N'
		        order by myp_id
		    ) a
		)
		where rnum between (${page}*${pageSize})-(${pageSize}-1) and (${page}*${pageSize})	
	</select>
	
	<select id="getPetListAllCnt" resultType="Integer">
		select count(*)
		from mypet
		where myp_del = 'N'
	</select>
	
	<select id="getPstReviewAllCnt" parameterType="String" resultType="Integer">
		select count(*)
		from sitterrev
		where stv_pst = #{stv_pst}
	</select>
	
	<select id="getPstReviewScore" parameterType="String" resultType="Integer">
		select nvl(sum(stv_score),0) as stv_score 
		from sitterrev
		where stv_pst = #{stv_pst}
	</select>
	
	<update id="updatePetsitterScore" parameterType="map">
		update petsitter set
		pst_score = ${pst_score}
		where pst_id = #{pst_id}
	</update>
	
	<select id="getMySupportCnt" parameterType="String" resultType="Integer">
		select count(*)
		from sitterapp
		where sta_mem = #{sta_mem}
	</select>
	
	<select id="getBestReview" resultType="revVo">
	select *
		from
		(
		    select rownum as rnum, a.*
		    from
		    (
		        select s.*, p.pst_img, p.pst_id
				from sitterrev s, petsitter p
				where stv_score <![CDATA[>]]> 4
				and stv_pst = pst_id
		    ) a
		)
		where rnum between 1 and 5
		
	</select>
	
	<select id="getSupportPaymentSuccess" parameterType="map" resultType="Integer">
		select to_char(sta_pdate, 'MM') as month, sum(sta_price) as price
		from sitterapp
		where to_char(sta_pdate, 'YYYYMMDD') between #{startDate} and #{endDate}
		and sta_chk = 1
		and sta_pay = 'Y'
		group by to_char(sta_pdate,'MM')
		order by to_char(sta_pdate,'MM') asc
	</select> 
	
	<select id="maxSitterres" parameterType="String" resultType="String">
		select max(str_id) sta_id
		from sitterres
		where str_mem = #{str_mem}
	</select>
	
	<update id="updateSitterres" parameterType="String">
		update sitterres set
		str_pay = 'Y'
		where str_id = #{str_id}
	</update>
	
	<update id="updateSupportPay" parameterType="String">
		update sitterapp set
		sta_pay = 'Y'
		where sta_id = #{sta_id}
	</update>
</mapper>