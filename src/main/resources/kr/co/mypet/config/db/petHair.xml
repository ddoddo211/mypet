<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="petHair">
  
  <!-- 주소 리스트 select 메서드 -->
  <select id="zipHigh" resultType="zipVo">
  	select distinct zip_high from zip
  </select>
  
  <!-- 주소 대분류를 이용해 소분류를 가져오는 메서드 -->
  <select id="zipLow" parameterType="String" resultType="zipVo">
  	select zip_low from zip where zip_high=#{zip_high}
  </select>
  
  <!-- 모든 미용실의 목록을 표시 -->
  <select id="shopSelectAll" resultType="hairShopVo">
  	select * from hairshop where has_score not in (0)
  </select>
  <!-- 모든 미용실의 목록을 표시 -->
  <select id="shopSelectAllR" resultType="hairShopVo">
  	select * from hairshop order by has_id desc 
  </select>
  
  <!-- 주소로 미용실 목록 표시 -->
  <select id="selectHairShopLoc" resultType="hairShopVo" parameterType="String">
  	select * from hairshop where has_addr like '%'||#{has_addr}||'%' and has_score not in (0)
  </select>
  
  <!--  특정 비용실의 정보 -->
  <select id="selectShop" resultType="hairShopVo" parameterType="String">
  	select * from hairshop where has_id = #{has_id}
  </select>
  
  <!-- 특정 미용실에 달려있는 후기목록 -->
  <select id="selectReview" parameterType="String" resultType="hairBoardVo">
  	select * from hairboard where hbrd_has=#{hbrd_has} and hbrd_brdt='1'
  </select>
  
  <!-- 해당샵의 사용가능한 스타일을 읽어온다 -->
  <select id="selectStyle" parameterType="String" resultType="styleVo">
  	select * from petstyle where pts_has=#{pts_has} and pts_del='1'
  </select>
  <!-- 해당샵의 사용가능한 스타일을 읽어온다 -->
  <select id="selectStyleAll" parameterType="String" resultType="styleVo">
  	select * from petstyle where pts_has=#{pts_has}
  </select>
  
  <!-- insertBoard 문의-->
  <insert id="insertHairBoard" parameterType="hairBoardVo">
  	insert into hairboard
	values('hbrd'||seq_hairboard.nextval,'',#{hbrd_text},seq_hairboardGN.nextval,sysdate,'',#{hbrd_has},#{hbrd_mem},'2','','')
  </insert>
  <!-- insertBoard 후기-->
  <insert id="insertReview" parameterType="hairBoardVo">
  	insert into hairboard
	values('hbrd'||seq_hairboard.nextval,#{hbrd_title},#{hbrd_text},seq_hairboardGN.nextval,sysdate,'',#{hbrd_has},#{hbrd_mem},'1','',${hbrd_score})
  </insert>
  
  <!-- 북마크 등록하기 -->
  <insert id="insertBookMark" parameterType="bmVo">
  	insert into bookmark
	values('bmk'||seq_bookmark.nextval,#{bmk_mem},#{bmk_has},'1')
  </insert>
  
  <!--  bookmark 중복체크 -->
  <select id="bmDup" parameterType="bmVo" resultType="int">
  	select count(*) from bookmark where bmk_mem=#{bmk_mem} and bmk_has=#{bmk_has} and bmk_fac='1'
  </select>
  
  <!-- 예약 전체조회 -->
  <select id="selRes" parameterType="hrVo" resultType="hrVo">
  	select * from hairres where hres_has = #{hres_has} and hres_time = #{hres_time} and  hres_date= #{hres_date} and hres_stat NOT IN('취소')
  </select>
  
  <!-- 예약 insert -->
  <insert id="insertRev" parameterType="hrVo" >
  	insert into hairres
	values('hres'||seq_hairres.nextval,#{hres_pts},#{hres_has},#{hres_mem},#{hres_myp},#{hres_date},#{hres_price},#{hres_stat},#{hres_spec},#{hres_time})
  </insert>
  
  <!-- 나의 펫 조회 -->
  <select id="selectMypet" parameterType="String" resultType="mypetVo">
  	select * from mypet where myp_mem = #{myp_mem}
  </select>
  
  <!-- 예약 선택조회 -->
  <select id="selectRev" parameterType="String" resultType="hrVo">
  	select * from hairres where hres_mem=#{mem_id} and hres_stat IN ('진행중','미용의뢰')
  </select>
  
  <!-- 예약 완료건 조회 -->
  <select id="selectRevCom" parameterType="map" resultType="hrVo">
  	
  	 select *
		 from
		 (select rownum rnum, a.*
		 from
		    (
		    select * from hairres where hres_mem = #{mem_id} and hres_stat IN ('완료','취소')
		    ) a 
		)
		where rnum between ${page}*5-(5-1) and ${page}*5
  </select>
  
  <!-- count 예약 완료건 -->
  <select id="revComCnt" resultType="int" parameterType="String">
  	select count(*) from hairres where hres_mem = #{mem_id} and hres_stat = '완료'
  </select>
  
  <!-- 스타일 한개 선택 -->
  <select id="selectStyleOne" parameterType="String" resultType="styleVo">
  	select * from petstyle where pts_id = #{pts_id}
  </select>
  
  <!-- 즐겨찾기 목록 선택 -->
  <select id="selectBookMark" parameterType="String" resultType="bmVo">
  	select * from bookmark where bmk_mem=#{mem_id} and bmk_fac='1'
  </select>
  
  <!-- 내가한 문의를 select -->
  <select id="selectAsk" parameterType="String" resultType="hairBoardVo">
  	select * from hairboard where hbrd_mem = #{mem_id} and hbrd_brdt='2'
  </select>
  
  <!-- 해당 미용실의 총 리뷰갯수와 리뷰의 합계를 구하는 select -->
  <select id="getScore" parameterType="String"  resultType="map">
  	select 'dodo', max(rownum) cnt, sum(hbrd_score) sums from hairboard where hbrd_has = #{has_id} and hbrd_brdt='1'
  </select>
  
  <!-- 미용실 점수  update  -->
  <update id="updateScore" parameterType="hairShopVo">
  	update hairshop
  	set has_score = #{has_score}
  	where has_id = #{has_id}
  </update>
  <!-- 미용실 정보  update  -->
  <update id="updateShopInfo" parameterType="hairShopVo">
  	update hairshop
  	set has_name = #{has_name},
  		has_addr = #{has_addr},
  		has_img  = #{has_img},
  		has_addr2 = #{has_addr2},
  		has_ptext = #{has_ptext},
  		has_text = #{has_text}
  	where has_id = #{has_id}
  </update>
  
  <!-- bookmark 삭제(update -->
  <update id="deleteBm" parameterType="String">
  	update bookmark
  	set bmk_fac='2'
  	where bmk_id=#{bmk_id}
  
  </update>
  
  
  <!--  mem_id 를 이용해 해당사용자가 운영중인 미용실 정보 가져오는 메서드 -->
  <select id="selectShopByMemId" parameterType="String" resultType="hairShopVo">
  	select *
  	from hairshop
  	where has_mem = #{mem_id}
  
  </select>
  
  
  <!-- 해당 미용실의 미답변 문의목록 -->
  <select id="selectAskByHasIdNA" parameterType="String" resultType="hairBoardVo">
  	select * from hairboard where hbrd_has=#{has_id} and hbrd_brdt='2' and hbrd_rep is null
  </select>
  
  
  <!-- 해당 미용실의 답변완료 문의목록 -->
  <select id="selectAskByHasIdYA" parameterType="String" resultType="hairBoardVo">
  	select * from hairboard where hbrd_has=#{has_id} and hbrd_brdt='2' and hbrd_rep is not null
  </select>
  
  <!-- 답변작성 / 수정  -->
  <update id="insertAskR" parameterType="hairBoardVo">
  	update hairboard
  	set hbrd_rep=#{hbrd_rep}
  	where hbrd_id=#{hbrd_id}
  
  </update>
  
  <!-- 접수된 의뢰 확인 (미용실 주인) -->
  <select id="selectRespRev" parameterType="String" resultType="hrVo">
  	select * from hairres where hres_has = #{has_id} and hres_stat = '미용의뢰'
  
  </select>
  <!-- 접수된 의뢰 확인 (미용실 주인) -->
  <select id="selectOgRev" parameterType="String" resultType="hrVo">
  	select * from hairres where hres_has = #{has_id} and hres_stat = '진행중'
  
  </select>
  
  <!-- update 예약건수 (미용실의 수락/취소) 기능 -->
  <update id="updateRevStat" parameterType="hrVo">
  	update hairres
  	set hres_stat=#{hres_stat},
  		hres_spec=#{hres_spec}
  	where hres_id=#{hres_id}
  
  </update>
  
  <!-- style update -->
  <update id="updateStyle" parameterType="styleVo">
  	update petstyle
  	set	pts_name = #{pts_name},
  		pts_price = #{pts_price},
  		pts_del = #{pts_del},
  		pts_img = #{pts_img}
  	where pts_id = #{pts_id}
  
  </update>
  
  <!-- insert style -->
  <insert id="insertStyle" parameterType="styleVo">
  	insert into petstyle
	values('pts'||seq_petstyle.nextval,#{pts_name},'강아지',#{pts_price},#{pts_has},#{pts_img},#{pts_del})
  
  </insert>
  
  <!--  insert apply hairshop -->
  <insert id="insertHairShopApply" parameterType="hsaVo">
  	insert into hairshopapply
	values('hsa'||seq_hsa.nextval,#{hsa_name},#{hsa_addr},#{hsa_addr2},#{hsa_img},#{hsa_ptext},#{hsa_text},#{hsa_mem},'대기')
  </insert>
  
  <!-- select apply hairshop by mem_id -->
  <select id="selectHsaById" parameterType="String" resultType="hsaVo">
  	select * from hairshopapply where hsa_mem=#{hsa_mem} and hsa_acp='대기'
  </select>
  
  <!-- select Hair Shop Apply user -->
  <select id="selectHairShopApply" resultType="hsaVo">
  	select * from hairshopapply where hsa_acp='대기'
  </select>
  
  <!-- insert HairShop -->
  <select id="insertHairShop" parameterType="hsaVo">
  	insert into hairshop
	values('has'||SEQ_HAIRSHOP.NEXTVAL,#{hsa_name},#{hsa_addr},#{hsa_img},#{hsa_ptext},#{hsa_text},5,#{hsa_mem},#{hsa_addr2})
  </select>
  
  <!-- hairShopApply update -->
  <update id="updateHairShopApply" parameterType="hsaVo">
  	update hairshopapply
  	set	hsa_name=#{hsa_name},
  		hsa_addr=#{hsa_addr},
  		hsa_addr2=#{hsa_addr2},
  		hsa_img=#{hsa_img},
  		hsa_ptext=#{hsa_ptext},
  		hsa_text=#{hsa_text},
  		hsa_acp=#{hsa_acp}
  	where hsa_id=#{hsa_id}
  </update>
  
  <!-- 미용사 등급업 -->
  <update id="updateMember" parameterType="String" >
  	update member
  	set mem_hair=2
  	where mem_id=#{hsa_mem}
  </update>
  
  <!-- 미용실 정보 수정 -->
  <update id="updateHairShop" parameterType="hairShopVo">
	update hairshop
  	set has_name = #{has_name},
  		has_addr = #{has_addr},
  		has_img  = #{has_img},
  		has_addr2 = #{has_addr2},
  		has_ptext = #{has_ptext},
  		has_text = #{has_text},
  		has_score = #{has_score}
  	where has_id = #{has_id}
  </update>
  
  <select id="selectHairShopTotalSales" parameterType="String">
  
  select sum(hres_price) from hairres where hres_stat='완료' and hres_date like #{date}||'%'
  
  	
  </select>
  <select id="selectHairShopTotalSalesByHasId" parameterType="map">
  
  select sum(hres_price) from hairres where hres_stat='완료' and hres_has=#{hres_has} and hres_date like #{date}||'%'
  
  	
  </select>
  
  
</mapper>











